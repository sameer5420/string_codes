/*bool solve(int sr,int sc,vector<vector<char>>&board,vector<vector<int>>&vis,string word,int index,int m,int n){    //1st method
        if(index==word.size()-1)return true;
        vis[sr][sc]=1;
        int nsr=sr-1,nsc=sc;
        if((nsr>=0&&nsr<m)&&(nsc>=0&&nsc<n)&&board[nsr][nsc]==word[index+1]&&vis[nsr][nsc]==0){
            if(solve(nsr,nsc,board,vis,word,index+1,m,n)) return true;
        }
        nsr=sr,nsc=sc+1;
        if((nsr>=0&&nsr<m)&&(nsc>=0&&nsc<n)&&board[nsr][nsc]==word[index+1]&&vis[nsr][nsc]==0){
            if(solve(nsr,nsc,board,vis,word,index+1,m,n)) return true;
        }
        nsr=sr+1,nsc=sc;
        if((nsr>=0&&nsr<m)&&(nsc>=0&&nsc<n)&&board[nsr][nsc]==word[index+1]&&vis[nsr][nsc]==0){
            if(solve(nsr,nsc,board,vis,word,index+1,m,n)) return true;
        }
        nsr=sr,nsc=sc-1;
        if((nsr>=0&&nsr<m)&&(nsc>=0&&nsc<n)&&board[nsr][nsc]==word[index+1]&&vis[nsr][nsc]==0){
            if(solve(nsr,nsc,board,vis,word,index+1,m,n)) return true;
        }
        vis[sr][sc]=0;
        return false;
    }*/
    bool solve(int x,int y,vector<vector<char>>&board,vector<vector<int>>&vis,string word,int index,int m, int n){ //2nd method
        if(index==word.size())return true;
        if(x<0||x>=m||y<0||y>=n||vis[x][y]==1)return false;
        if(board[x][y]!=word[index])return false;
        vis[x][y]=1;
        if(solve(x-1,y,board,vis,word,index+1,m,n)||solve(x,y+1,board,vis,word, index+1,m,n)||solve(x+1,y,board,vis,word,index+1,m,n)||solve(x,y-1,board,vis,word,index+1,m,n))return true;
        vis[x][y]=0;
        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size(),n=board[0].size();
        vector<vector<int>>vis(m,vector<int>(n,0));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if((board[i][j]==word[0])&&solve(i,j,board,vis,word,0,m,n)){
                    return true;
                }
            }
        }
        return false;
    }
