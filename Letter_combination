void solve(string digits,int index, string output,vector<string>&ans,unordered_map<char,string>&mp){
      if(index==digits.size()){
          ans.push_back(output);
          return;
      }
      string value=mp[digits[index]];
      for(int i=0;i<value.size();i++){
          output.push_back(value[i]);
          solve(digits,index+1,output,ans,mp);
          output.pop_back();
      }
  }
  vector<string> letterCombinations(string digits) {
      if(digits=="")return {};
      unordered_map<char,string>mp;
      mp['2']="abc";
      mp['3']="def";
      mp['4']="ghi";
      mp['5']="jkl";
      mp['6']="mno";
      mp['7']="pqrs";
      mp['8']="tuv";
      mp['9']="wxyz";
      vector<string>ans;
      string output="";
      int index=0;
      solve(digits,index,output,ans,mp);
      return ans;
  }
